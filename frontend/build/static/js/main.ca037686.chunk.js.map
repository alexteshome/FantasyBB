{"version":3,"sources":["setAuthToken.js","actions/authentication.js","actions/types.js","components/Navbar.js","components/Home.js","components/Register.js","components/Login.js","actions/players.js","components/StatsHeader.js","components/PlayerRow.js","components/NewTeam.js","components/TeamDetails.js","components/TeamList.js","components/PrivateRoute.js","App.js","serviceWorker.js","reducers/errorReducer.js","validation/is-empty.js","reducers/authReducer.js","reducers/index.js","reducers/playersReducer.js","store.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","history","dispatch","localStorage","removeItem","Navbar","e","preventDefault","this","props","isAuthenticated","auth","guestLinks","react_default","a","createElement","onClick","onLogout","bind","Link","to","Button","inverted","style","marginLeft","Segment","padding","vertical","Container","Menu","size","Item","as","header","position","Component","connect","state","withRouter","Home","Register","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","name","email","password","password_confirm","errors","handleInputChange","assertThisInitialized","handleSubmit","setState","defineProperty","target","value","user","registerUser","nextProps","className","marginTop","width","marginBottom","onSubmit","placeholder","classnames","is-invalid","onChange","post","then","res","push","catch","err","response","data","Login","loginUser","setItem","jwt_decode","fetchPlayers","_ref","asyncToGenerator","regenerator_default","mark","_callee","players_api_call","wrap","_context","prev","next","NBA","stats","playerStats","sent","abrupt","stop","apply","arguments","getPlayers","leagueDashPlayerStats","StatsHeader","Table","Row","HeaderCell","collapsing","Popup","trigger","content","PlayerRow","resetComponent","isLoading","results","handleSearchChange","length","fantasyPts","handleDeletePlayer","row","initialState","setTimeout","re","RegExp","_","escapeRegExp","filter","players","result","test","handleResultSelect","_ref2","selectedPlayer","id","objectSpread","playerId","team","selected","searchInputRef","focus","_this2","_this$state","gp","min","pts","fgPct","fg3Pct","fG3M","ftPct","reb","ast","stl","blk","tov","Body","Cell","verticalAlign","singleLine","Search","loading","onResultSelect","onSearchChange","debounce","leading","input","ref","r","Icon","color","numRows","visibility","visbility","NewTeam","handleChange","saved","teamName","slots","rows","totalFantasyPts","handleAddSlot","saveTeam","addPlayer","deletePlayer","toConsumableArray","concat","components_PlayerRow","key","message","userId","player","_id","parseInt","_this$state2","Header","Divider","celled","compact","definition","sortable","textAlign","fullWidth","components_StatsHeader","Footer","colSpan","background","border","margin","cursor","disabled","toFixed","Form","success","error","Input","required","Message","primary","TeamDetails","get","teams","find","console","log","allPlayers","map","playerInfo","statePlayer","TeamList","deleteTeam","clickedTeam","delete","renderBodyRow","idx","undefined","show","open","handleConfirm","handleCancel","_this3","panes","menuItem","teamId","render","Tab","Pane","negative","basic","floated","Confirm","onCancel","onConfirm","components_TeamDetails","attached","padded","menu","fluid","onTabChange","activeIndex","PrivateRoute","component","authenticated","rest","objectWithoutProperties","Route","assign","componentProps","Redirect","App","BrowserRouter","components_Navbar","exact","path","components_PrivateRoute","Boolean","window","location","hostname","match","isEmpty","keys","trim","combineReducers","action","playerName","teamAbbreviation","nbaFantasyPts","title","description","store","createStore","rootReducer","compose","applyMiddleware","thunk","jwtToken","currentTime","Date","now","exp","href","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca037686.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if(token) {\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    }\r\n    else {\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setAuthToken from \"../setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const registerUser = (user, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", user)\r\n    .then(res => history.push(\"/login\"))\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\nexport const loginUser = user => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", user)\r\n    .then(res => {\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      setAuthToken(token);\r\n      const decoded = jwt_decode(token);\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\nexport const logoutUser = history => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setAuthToken(false);\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const GET_ALL_PLAYERS = \"GET_ALL_PLAYERS\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../actions/authentication\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button, Container, Menu, Segment } from \"semantic-ui-react\";\r\n\r\nclass Navbar extends Component {\r\n  onLogout(e) {\r\n    e.preventDefault();\r\n    this.props.logoutUser(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { isAuthenticated } = this.props.auth;\r\n    const authLinks = (\r\n      <div onClick={this.onLogout.bind(this)}>\r\n        {/* <img\r\n            src={user.avatar}\r\n            alt={user.name}\r\n            title={user.name}\r\n            className=\"rounded-circle\"\r\n            style={{ width: \"25px\", marginRight: \"5px\" }}\r\n          /> */}\r\n        Logout\r\n      </div>\r\n    );\r\n    const guestLinks = (\r\n      <div>\r\n        <Link to=\"/register\">\r\n          <Button inverted>Sign Up</Button>\r\n        </Link>\r\n        <Link to=\"/login\" style={{ marginLeft: \"0.3em\" }}>\r\n          <Button inverted>Sign In</Button>\r\n        </Link>\r\n      </div>\r\n    );\r\n    return (\r\n      <Segment inverted style={{ padding: \"0 0\" }} vertical>\r\n        <Container>\r\n          <Menu inverted size=\"huge\">\r\n            <Menu.Item as={Link} to=\"/home\" header>\r\n              FantasyAT\r\n            </Menu.Item>\r\n            {isAuthenticated ? (\r\n              <Menu.Item as={Link} to=\"/teamlist\" header>\r\n                Team List\r\n              </Menu.Item>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {isAuthenticated ? (\r\n              <Menu.Item as={Link} to=\"/newteam\">\r\n                New Team\r\n              </Menu.Item>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {isAuthenticated ? (\r\n              <Menu.Item onClick={this.onLogout.bind(this)} position=\"right\">\r\n                Logout\r\n              </Menu.Item>\r\n            ) : (\r\n              <Menu.Item position=\"right\" style={{ padding: \"0\" }}>\r\n                {guestLinks}\r\n              </Menu.Item>\r\n            )}\r\n          </Menu>\r\n        </Container>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\nNavbar.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(withRouter(Navbar));\r\n","import React, { Component } from \"react\";\r\nimport NBA from \"nba\";\r\n\r\nconst Home = () => {\r\n  return <div />;\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { registerUser } from '../actions/authentication';\r\nimport classnames from 'classnames';\r\n\r\nclass Register extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            password_confirm: '',\r\n            errors: {}\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password_confirm: this.state.password_confirm\r\n        }\r\n        this.props.registerUser(user, this.props.history);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return(\r\n        <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\r\n            <h2 style={{marginBottom: '40px'}}>Registration</h2>\r\n            <form onSubmit={ this.handleSubmit }>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.name\r\n                    })}\r\n                    name=\"name\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.name }\r\n                    />\r\n                    {errors.name && (<div className=\"invalid-feedback\">{errors.name}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.email\r\n                    })}\r\n                    name=\"email\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.email }\r\n                    />\r\n                    {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.password\r\n                    })}\r\n                    name=\"password\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.password }\r\n                    />\r\n                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.password_confirm\r\n                    })}\r\n                    name=\"password_confirm\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.password_confirm }\r\n                    />\r\n                    {errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Register User\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register))","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../actions/authentication\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    this.props.loginUser(user);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container\" style={{ marginTop: \"50px\", width: \"700px\" }}>\r\n        <h2 style={{ marginBottom: \"40px\" }}>Login</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.email\r\n              })}\r\n              name=\"email\"\r\n              onChange={this.handleInputChange}\r\n              value={this.state.email}\r\n            />\r\n            {errors.email && (\r\n              <div className=\"invalid-feedback\">{errors.email}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.password\r\n              })}\r\n              name=\"password\"\r\n              onChange={this.handleInputChange}\r\n              value={this.state.password}\r\n            />\r\n            {errors.password && (\r\n              <div className=\"invalid-feedback\">{errors.password}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Login User\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);\r\n","import { GET_ERRORS, GET_ALL_PLAYERS } from \"./types\";\r\nimport NBA from \"nba\";\r\n\r\nconst fetchPlayers = async () => {\r\n  //convert country to country code for api url\r\n  const players_api_call = await NBA.stats.playerStats();\r\n\r\n  return players_api_call;\r\n};\r\n\r\n//Asynchronous action creators, dispatches to reducer and is stored depending on action type\r\nexport const getPlayers = () => dispatch => {\r\n  fetchPlayers()\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_ALL_PLAYERS,\r\n        payload: res.leagueDashPlayerStats\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err\r\n      });\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { Table, Popup } from \"semantic-ui-react\";\r\n\r\nconst StatsHeader = () => {\r\n  return (\r\n    <Table.Row>\r\n      <Table.HeaderCell collapsing>Player</Table.HeaderCell>\r\n      <Table.HeaderCell>Team</Table.HeaderCell>\r\n      <Popup\r\n        trigger={<Table.HeaderCell>GP</Table.HeaderCell>}\r\n        content=\"Games Played\"\r\n      />\r\n      <Popup\r\n        trigger={<Table.HeaderCell>MIN</Table.HeaderCell>}\r\n        content=\"Minutes Played Per Game\"\r\n      />\r\n      <Popup\r\n        trigger={<Table.HeaderCell>PTS</Table.HeaderCell>}\r\n        content=\"Points Per Game\"\r\n      />\r\n      <Popup\r\n        trigger={<Table.HeaderCell>FG%</Table.HeaderCell>}\r\n        content=\"Field Goal Percentage\"\r\n      />\r\n      <Popup\r\n        trigger={<Table.HeaderCell>FG3M</Table.HeaderCell>}\r\n        content=\"Three Point Field Goals Made Per Game \"\r\n      />\r\n      <Popup\r\n        trigger={<Table.HeaderCell>FG3%</Table.HeaderCell>}\r\n        content=\"Three Point Field Goal Percentage\"\r\n      />\r\n      <Popup\r\n        trigger={<Table.HeaderCell>FT%</Table.HeaderCell>}\r\n        content=\"Free Throw Percentage\"\r\n      />\r\n      <Popup\r\n        trigger={<Table.HeaderCell>REB</Table.HeaderCell>}\r\n        content=\"Rebounds Per Game\"\r\n      />\r\n      <Popup\r\n        trigger={<Table.HeaderCell>AST</Table.HeaderCell>}\r\n        content=\"Assists Per Game\"\r\n      />\r\n      <Popup\r\n        trigger={<Table.HeaderCell>STL</Table.HeaderCell>}\r\n        content=\"Steals Per Game\"\r\n      />\r\n      <Popup\r\n        trigger={<Table.HeaderCell>BLK</Table.HeaderCell>}\r\n        content=\"Blocks Per Game\"\r\n      />\r\n      <Popup\r\n        trigger={<Table.HeaderCell>TOV</Table.HeaderCell>}\r\n        content=\"Turnovers Per Game\"\r\n      />\r\n      <Popup\r\n        trigger={<Table.HeaderCell>FPTS</Table.HeaderCell>}\r\n        content=\"NBA Fantasy Points\"\r\n      />\r\n      <Table.HeaderCell collapsing />\r\n    </Table.Row>\r\n  );\r\n};\r\nexport default StatsHeader;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { Icon, Search, Table } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nclass PlayerRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.initialState;\r\n  }\r\n  get initialState() {\r\n    return {\r\n      playerId: 0,\r\n      team: \"-\",\r\n      gp: \"-\",\r\n      min: \"-\",\r\n      fgPct: \"-\",\r\n      ftPct: \"-\",\r\n      fg3Pct: \"-\",\r\n      fG3M: \"-\",\r\n      pts: \"-\",\r\n      reb: \"-\",\r\n      ast: \"-\",\r\n      stl: \"-\",\r\n      blk: \"-\",\r\n      tov: \"-\",\r\n      fantasyPts: 0,\r\n      isLoading: false,\r\n      results: [],\r\n      value: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.resetComponent();\r\n    if (this.searchInputRef.focus) {\r\n      this.searchInputRef.focus();\r\n    }\r\n  }\r\n  resetComponent = () =>\r\n    this.setState({ isLoading: false, results: [], value: \"\" });\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    if (value.length < 3) {\r\n      this.setState({ value });\r\n      return;\r\n    }\r\n    if (this.state.fantasyPts !== \"-\") {\r\n      this.props.handleDeletePlayer(\r\n        this.props.row,\r\n        this.state.fantasyPts,\r\n        false\r\n      );\r\n      this.state = this.initialState;\r\n    }\r\n    this.setState({ isLoading: true, value });\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.resetComponent();\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\r\n      const isMatch = result => re.test(result.name);\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(this.props.players, isMatch)\r\n      });\r\n    }, 300);\r\n  };\r\n  handleResultSelect = (e, { result }) => {\r\n    this.props.selectedPlayer(result.id, result.name, result.stats.fantasyPts);\r\n\r\n    this.setState({\r\n      playerId: result.id,\r\n      team: result.team,\r\n      ...result.stats,\r\n      value: result.name,\r\n      selected: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      playerId,\r\n      team,\r\n      gp,\r\n      min,\r\n      pts,\r\n      fgPct,\r\n      fg3Pct,\r\n      fG3M,\r\n      ftPct,\r\n      reb,\r\n      ast,\r\n      stl,\r\n      blk,\r\n      tov,\r\n      fantasyPts,\r\n      isLoading,\r\n      results,\r\n      value,\r\n      selected\r\n    } = this.state;\r\n    return (\r\n      <Table.Body>\r\n        <Table.Row>\r\n          <Table.Cell verticalAlign=\"middle\" singleLine>\r\n            {selected ? (\r\n              value\r\n            ) : (\r\n              <Search\r\n                loading={isLoading}\r\n                onResultSelect={this.handleResultSelect}\r\n                onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n                  leading: true\r\n                })}\r\n                results={value.length < 3 ? [] : results}\r\n                value={value}\r\n                placeholder=\"Select Player\"\r\n                input={{ ref: r => (this.searchInputRef = r) }}\r\n              />\r\n            )}\r\n          </Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{team}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{gp}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{min}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{pts}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{fgPct}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{fG3M}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{fg3Pct}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{ftPct}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{reb}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{ast}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stl}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{blk}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{tov}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{fantasyPts}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">\r\n            <Icon\r\n              name=\"close\"\r\n              color=\"red\"\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                this.props.handleDeletePlayer(\r\n                  playerId,\r\n                  this.props.row,\r\n                  fantasyPts\r\n                );\r\n              }}\r\n              style={\r\n                this.props.numRows < 1 && !selected\r\n                  ? { visibility: \"hidden\" }\r\n                  : { visbility: \"visible\" }\r\n              }\r\n            />\r\n          </Table.Cell>\r\n        </Table.Row>\r\n      </Table.Body>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  players: state.players.players\r\n});\r\n\r\nexport default connect(mapStateToProps)(PlayerRow);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Form,\r\n  Header,\r\n  Icon,\r\n  Message,\r\n  Popup,\r\n  Responsive,\r\n  Search,\r\n  Segment,\r\n  Sidebar,\r\n  Table\r\n} from \"semantic-ui-react\";\r\nimport { getPlayers } from \"../actions/players\";\r\nimport { connect } from \"react-redux\";\r\nimport StatsHeader from \"./StatsHeader\";\r\nimport PlayerRow from \"./PlayerRow\";\r\nimport axios from \"axios\";\r\n\r\nclass NewTeam extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      saved: \"typing\",\r\n      teamName: \"\",\r\n      slots: 0,\r\n      players: [],\r\n      rows: [],\r\n      totalFantasyPts: 0\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleAddSlot = this.handleAddSlot.bind(this);\r\n    this.saveTeam = this.saveTeam.bind(this);\r\n    this.addPlayer = this.addPlayer.bind(this);\r\n    this.deletePlayer = this.deletePlayer.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.handleAddSlot();\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.rows.length === 0) {\r\n      this.setState({ totalFantasyPts: 0 });\r\n      this.handleAddSlot();\r\n    }\r\n  }\r\n\r\n  handleAddSlot(e) {\r\n    if (e) e.preventDefault();\r\n    this.setState({\r\n      slots: this.state.slots + 1,\r\n      rows: [\r\n        ...this.state.rows,\r\n        <PlayerRow\r\n          key={this.state.slots + 1}\r\n          row={this.state.slots + 1}\r\n          numRows={this.state.rows.length}\r\n          selectedPlayer={this.addPlayer}\r\n          handleDeletePlayer={this.deletePlayer}\r\n        />\r\n      ]\r\n    });\r\n  }\r\n  saveTeam(e) {\r\n    const { teamName, players } = this.state;\r\n    if (players.length == 0) {\r\n      this.setState({\r\n        saved: \"error\",\r\n        message: {\r\n          header: \"Team could not be saved\",\r\n          content: \"Add players before saving the team\"\r\n        }\r\n      });\r\n    } else {\r\n      axios\r\n        .post(\"/api/teams/\", {\r\n          userId: this.props.user.id,\r\n          name: teamName,\r\n          players: players\r\n        })\r\n        .then(res => {\r\n          this.setState({\r\n            saved: \"saved\",\r\n            message: res.data.message,\r\n            teamName: \"\",\r\n            slots: 0,\r\n            players: [],\r\n            rows: []\r\n          });\r\n        })\r\n        .catch(err => {\r\n          this.setState({ saved: \"error\", message: err.response.data.message });\r\n        });\r\n    }\r\n  }\r\n\r\n  addPlayer(playerId, player, fantasyPts) {\r\n    this.setState({\r\n      players: [\r\n        ...this.state.players,\r\n        {\r\n          _id: playerId,\r\n          name: player\r\n        }\r\n      ],\r\n      totalFantasyPts: this.state.totalFantasyPts + fantasyPts\r\n    });\r\n    if(this.state.slots < 14) this.handleAddSlot();\r\n  }\r\n  deletePlayer(playerId, key, fantasyPts) {\r\n    this.setState({\r\n      players: this.state.players.filter(player => player._id !== playerId),\r\n      rows: this.state.rows.filter(row => parseInt(row.key) !== key),\r\n      totalFantasyPts: this.state.totalFantasyPts - fantasyPts\r\n    });\r\n  }\r\n\r\n  handleChange = (e, { value }) =>\r\n    this.setState({ saved: \"typing\", teamName: value });\r\n\r\n  render() {\r\n    const {\r\n      slots,\r\n      rows,\r\n      teamName,\r\n      saved,\r\n      message,\r\n      totalFantasyPts\r\n    } = this.state;\r\n    return (\r\n      <Container>\r\n        <br />\r\n        <Header>Add your fantasy team</Header>\r\n        <Divider />\r\n        <Table celled compact definition sortable textAlign=\"center\">\r\n          <Table.Header fullWidth>\r\n            <StatsHeader />\r\n          </Table.Header>\r\n          {rows}\r\n          <Table.Footer fullWidth>\r\n            <Table.Row textAlign=\"left\">\r\n              <Table.HeaderCell colSpan=\"14\">\r\n                <Button\r\n                  style={{\r\n                    background: \"none\",\r\n                    border: \"none\",\r\n                    margin: 0,\r\n                    padding: 0,\r\n                    cursor: \"pointer\",\r\n                    color: \"blue\"\r\n                  }}\r\n                  disabled={slots > 13}\r\n                  onClick={this.handleAddSlot}\r\n                >\r\n                  <Icon name=\"add\" />\r\n                  Add Player\r\n                </Button>\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell style={{ textAlign: \"center\" }}>\r\n                {totalFantasyPts === 0 ? 0 : totalFantasyPts.toFixed(1)}\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell />\r\n            </Table.Row>\r\n          </Table.Footer>\r\n        </Table>\r\n        <Form\r\n          success={saved === \"saved\"}\r\n          error={saved === \"error\"}\r\n          onSubmit={this.saveTeam}\r\n        >\r\n          <Form.Input\r\n            placeholder=\"Enter a team name\"\r\n            value={teamName}\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n          {saved === \"typing\" ? (\r\n            \"\"\r\n          ) : (\r\n            <Message\r\n              success={saved === \"saved\"}\r\n              error={saved === \"error\"}\r\n              header={message.header}\r\n              content={message.content}\r\n            />\r\n          )}\r\n          <Button primary>Save Team</Button>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.auth.user\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPlayers }\r\n)(NewTeam);\r\n","import React, { Component } from \"react\";\r\nimport { Container, Table, Header } from \"semantic-ui-react\";\r\nimport StatsHeader from \"./StatsHeader\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport NBA from \"nba\";\r\n\r\nclass TeamDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { teamName: \"\", players: [] };\r\n  }\r\n  componentDidMount() {\r\n    const teamName = this.props.teamName;\r\n    this.setState({ teamName });\r\n    const userId = this.props.user.id;\r\n    axios\r\n      .get(`/api/teams/${userId}`)\r\n      .then(res => {\r\n        if (!res.data.teams) return;\r\n        this.setState({\r\n          players: res.data.teams.find(team => team.name == teamName).players\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const allPlayers = this.props.players;\r\n    if (allPlayers.length == 0) return \"\";\r\n    const team = this.state.players.map((player, key) => {\r\n      const playerInfo = allPlayers.find(\r\n        statePlayer => statePlayer.id == player._id\r\n      );\r\n      const stats = playerInfo.stats;\r\n      return (\r\n        <Table.Row key={key}>\r\n          <Table.Cell key={player._id} verticalAlign=\"middle\" singleLine>\r\n            {player.name}\r\n          </Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{playerInfo.team}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stats.gp}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stats.min}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stats.pts}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stats.fgPct}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stats.fG3M}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stats.fg3Pct}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stats.ftPct}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stats.reb}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stats.ast}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stats.stl}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stats.blk}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stats.tov}</Table.Cell>\r\n          <Table.Cell verticalAlign=\"middle\">{stats.fantasyPts}</Table.Cell>\r\n        </Table.Row>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Container style={{ marginTop: \"50px\" }}>\r\n        <Header textAlign=\"center\">{this.state.teamName}</Header>\r\n        <Table celled compact definition sortable textAlign=\"center\">\r\n          <Table.Header fullWidth>\r\n            <StatsHeader />\r\n          </Table.Header>\r\n          <Table.Body>\r\n            <Table.Row />\r\n            {team}\r\n          </Table.Body>\r\n        </Table>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.auth.user,\r\n    players: state.players.players\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(TeamDetails);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  Confirm,\r\n  Container,\r\n  Divider,\r\n  Form,\r\n  Header,\r\n  Icon,\r\n  Message,\r\n  Popup,\r\n  Responsive,\r\n  Search,\r\n  Segment,\r\n  Sidebar,\r\n  Tab,\r\n  Table\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport TeamDetails from \"./TeamDetails\";\r\n\r\nclass TeamList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { teams: [], open: false, clickedTeam: 0 };\r\n    this.renderBodyRow = this.renderBodyRow.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n    this.handleConfirm = this.handleConfirm.bind(this);\r\n    this.show = this.show.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const userId = this.props.user.id;\r\n    axios\r\n      .get(`/api/teams/${userId}`)\r\n      .then(res => {\r\n        if (!res.data.teams) return;\r\n        console.log(res.data.teams);\r\n        this.setState({\r\n          teams: res.data.teams,\r\n          clickedTeam: res.data.teams[0]._id\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteTeam = () => {\r\n    const clickedTeam = this.state.teams[this.state.clickedTeam];\r\n    axios\r\n      .delete(`/api/teams/${clickedTeam._id}`)\r\n      .then(res =>\r\n        this.setState({\r\n          teams: this.state.teams.filter(team => team !== clickedTeam)\r\n        })\r\n      )\r\n      .catch(err => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  renderBodyRow = idx => {\r\n    if (this.state.teams == undefined) return [];\r\n    return this.state.teams[idx].players.map((player, key) => {\r\n      return (\r\n        <Table.Row key={key}>\r\n          <Table.Cell key={player.id}>{player.name}</Table.Cell>\r\n        </Table.Row>\r\n      );\r\n    });\r\n  };\r\n\r\n  show = () => {\r\n    console.log(this.state.clickedTeam);\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleConfirm = () => {\r\n    this.deleteTeam();\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleCancel = () => this.setState({ open: false });\r\n\r\n  render() {\r\n    const panes = this.state.teams.map((team, idx) => {\r\n      return {\r\n        menuItem: team.name,\r\n        teamId: team._id,\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Button\r\n              negative\r\n              basic\r\n              onClick={this.show}\r\n              content=\"Delete Team\"\r\n              floated=\"right\"\r\n              size=\"small\"\r\n            />\r\n            <Confirm\r\n              open={this.state.open}\r\n              onCancel={this.handleCancel}\r\n              onConfirm={this.handleConfirm}\r\n            />\r\n            <TeamDetails key={idx} teamName={team.name} />\r\n          </Tab.Pane>\r\n        )\r\n      };\r\n    });\r\n    return (\r\n      <Segment basic attached padded>\r\n        <Tab\r\n          menu={{ fluid: true, vertical: true }}\r\n          panes={panes}\r\n          onTabChange={(e, data) =>\r\n            this.setState({ clickedTeam: data.activeIndex })\r\n          }\r\n        />\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.auth.user,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    players: state.players.players\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(TeamList);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={componentProps =>\r\n      authenticated === true ? (\r\n        <Component {...componentProps} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Home from \"./components/Home\";\r\nimport Register from \"./components/Register\";\r\nimport Login from \"./components/Login\";\r\nimport NewTeam from \"./components/NewTeam\";\r\nimport TeamList from \"./components/TeamList\";\r\nimport TeamDetails from \"./components/TeamDetails\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { getPlayers } from \"./actions/players\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.getPlayers();\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Navbar />\r\n\r\n          <div>\r\n            <Route exact path=\"/home\" component={Home} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <PrivateRoute\r\n              exact\r\n              authenticated={this.props.auth.isAuthenticated}\r\n              path=\"/newteam\"\r\n              component={NewTeam}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              authenticated={this.props.auth.isAuthenticated}\r\n              path=\"/teamlist\"\r\n              component={TeamList}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              authenticated={this.props.auth.isAuthenticated}\r\n              path=\"/teamlist/:teamId\"\r\n              component={TeamDetails}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPlayers }\r\n)(withRouter(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action ) {\r\n    switch(action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default: \r\n            return state;\r\n    }\r\n}","const isEmpty = (value) => {\r\n    return (\r\n        value === undefined ||\r\n        value === null ||\r\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n        (typeof value === 'string' && value.trim().length === 0)\r\n    );\r\n}\r\nexport default isEmpty;","import { SET_CURRENT_USER } from \"../actions/types\";\r\nimport isEmpty from \"../validation/is-empty\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport playersReducer from \"./playersReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  auth: authReducer,\r\n  players: playersReducer\r\n});\r\n","import { GET_ALL_PLAYERS } from \"../actions/types\";\r\n\r\nexport default function(state = { players: [] }, action) {\r\n  switch (action.type) {\r\n    case GET_ALL_PLAYERS:\r\n      return {\r\n        ...state,\r\n        players: action.payload.map(player => {\r\n          return {\r\n            id: player.playerId,\r\n            name: player.playerName,\r\n            team: player.teamAbbreviation,\r\n            stats: {\r\n              gp: player.gp,\r\n              min: player.min,\r\n              pts: player.pts,\r\n              fgPct: player.fgPct,\r\n              fg3Pct: player.fg3Pct,\r\n              fG3M: player.fG3M,\r\n              ftPct: player.ftPct,\r\n              reb: player.reb,\r\n              ast: player.ast,\r\n              stl: player.stl,\r\n              blk: player.blk,\r\n              tov: player.tov,\r\n              fantasyPts: player.nbaFantasyPts\r\n            },\r\n            title: player.playerName,\r\n            description: player.teamAbbreviation\r\n          };\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst inititalState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  inititalState,\r\n  compose(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport store from \"./store\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authentication\";\r\n\r\nif (localStorage.jwtToken) {\r\n  setAuthToken(localStorage.jwtToken);\r\n  const decoded = jwt_decode(localStorage.jwtToken);\r\n  store.dispatch(setCurrentUser(decoded));\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    store.dispatch(logoutUser());\r\n    window.location.href = \"/login\";\r\n  }\r\n}\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}